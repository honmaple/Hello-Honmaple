scriptencoding utf-8
set nocompatible
set viminfo+=n$HOME/.vim/viminfo

let g:is_gui = has('gui_running')
let g:is_mac = has('macunix')
let g:is_linux = has('unix') && !has('macunix') && !has('win32unix')
let g:is_windows = has('win32') || has('win64')
let g:username = 'honmaple'
let g:email = 'mail@honmaple.com'

let mapleader = ','                             " 修改leader键
let g:mapleader = ','

syntax on                                       " 代码高亮
filetype on                                     " 启用文件类型侦测
filetype plugin on                              " 针对不同的文件类型加载对应的插件
filetype plugin indent on                       " 启用缩进
set t_Co=256

set number                                      " 显示行号
set relativenumber number                       " 设置相对行号
set mouse=a                                     " 任何模式下启用鼠标
set mousehide                                   " Hide the mouse cursor while typing
set backspace=indent,eol,start                  " Backspace for dummies
set linespace=0                                 " No extra spaces between rows
set shiftwidth=4                                " 换行时自动缩进宽度，可更改（宽度同tabstop）
set expandtab                                   " 将Tab键转换为空格
set tabstop=4                                   " 设置Tab键的宽度，可以更改，如：宽度为2

set shortmess+=filmnrxoOtT                      " 去掉欢迎界面
set viewoptions=folds,options,cursor,unix,slash " Better Unix / Windows compatibility
set virtualedit=onemore                         " Allow for cursor beyond last character
set history=1000                                " Store a ton of history (default is 20)
set iskeyword+=_,$,@,%,#,-                      " 带有如下符号的单词不要被换行分割

set hidden                                      " Allow buffer switching without saving
set nobackup                                    " 禁止生成临时文件
set noswapfile
set nowrap                                      " 设置不自动换行
set autoindent                                  " 打开自动缩进

set cuc                                         " 高亮光标所在列
set cursorline                                  " 高亮光标所在行
set colorcolumn=80
set ruler                                       " 右下角显示光标位置的状态行
set showcmd                                     " 在状态栏显示正在输入的命令
set laststatus=2                                " 启用状态栏信息
set statusline=%<%f\ %w%h%m%r\ [%{&ff}/%Y]\ [%{getcwd()}]\ %=%-14.(%l,%c%V%)\ %p%%

set scrolloff=10                                " 在上下移动光标时，光标的上方或下方至少会保留显示的行数
set showmatch                                   " 高亮显示匹配的括号
set incsearch                                   " 在输入要搜索的文字时，实时匹配
set hlsearch                                    " 高亮搜索
set ignorecase                                  " 搜索模式里忽略大小写
set smartcase                                   " 如果搜索模式包含大写字符，不使用'ignorecase' 选项，只有在输入搜索模式并且打开 'ignorecase' 选项时才会使用
set completeopt=longest,menu                    " 让vim的补全菜单行为与一般IDE一致(参考VimTip1228)
set wildmenu
set wildmode=list:longest,full                  " 增强模式中的命令行自动完成操作
set whichwrap=b,s,h,l,<,>,[,]                   " Backspace and cursor keys wrap too
set wildignore=*.o,*~,*.pyc,*.class
set list
set listchars=tab:›\ ,trail:•,extends:#,nbsp:.  " Highlight problematic whitespace

"set smartindent                                " 启用智能对齐方式
"set shiftround                                 " 缩进时，取整
"set showtabline=1                              " 显示标签
set smarttab                                    " 指定按一次backspace就删除shiftwidth宽度
"set foldenable                                 " 启用折叠
"set foldmethod=indent                          " indent 折叠方式
"set foldmethod=syntax
set foldmethod=marker
set nofoldenable                                " 启动 vim 时关闭折叠代码
"set matchtime=5                                " 匹配括号高亮的时间（单位是十分之一秒）
"set autoread                                   " 当文件在外部被修改，自动更新该文件
"set autowrite                                  " 自动保存
"set vb t_vb=                                   " 关闭提示音

"highlight clear SignColumn                     " SignColumn should match background
"highlight clear LineNr                         " Current line number row will have same background color in relative mode
"highlight clear CursorLineNr                   " Remove highlight color from current line number

if has('clipboard')
    if has('unnamedplus')                       " When possible use + register for copy-paste
        set clipboard=unnamed,unnamedplus
    else                                        " On mac and Windows, use * register for copy-paste
        set clipboard=unnamed
    endif
endif

" 插入模式下用绝对行号, 普通模式下用相对
autocmd FocusLost *   :set norelativenumber number
autocmd FocusGained * :set relativenumber
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber

" 显示/隐藏菜单栏、工具栏、滚动条
if g:is_gui
    set guiheadroom=0
    set guioptions-=m
    set guioptions-=T
    set guioptions-=r
    set guioptions-=L
endif

function s:require(file)
    let l:file = $HOME . '/.vim/core/' . a:file . '.vim'
    if filereadable(expand(l:file))
        execute 'source ' . fnameescape(l:file)
    else
        echom l:file . ' does not exist.'
    endif
endfunction

let require_list = [
  \ 'ui',
  \ 'editor',
  \ 'file',
  \ 'keybind']

call plug#begin('~/.vim/plugged')
    for file in require_list
        call s:require(file)
    endfor
call plug#end()
